---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{  .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 30%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      serviceAccountName: dispatch-svc-acct
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - "/venv/bin/dispatch server"
        args:
          - start
          - dispatch.main:app
          - --host=0.0.0.0
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PROJECT_NAME
          value: {{ .Values.project }}
        - name: CLUSTER_NAME
          value: {{ .Values.cluster }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: APP_VERSION
          value: "{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: "/hc"
            port: {{ .Values.service.internalPort }}
          timeoutSeconds: 5
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: {{ .Values.service.internalPort }}
            path: "/hc"
          timeoutSeconds: 5
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
